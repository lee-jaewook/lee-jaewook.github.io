<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-03-16T21:54:23+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jaewook Log 🧑🏻‍💻</title><subtitle>Hi my name is jaewook lee.
</subtitle><author><name>Jaewook Lee</name></author><entry><title type="html">Utterances로 깃허브 페이지(Github Page) 댓글 기능 추가하는 법</title><link href="http://localhost:4000/2022/03/14/add_comment_func.html" rel="alternate" type="text/html" title="Utterances로 깃허브 페이지(Github Page) 댓글 기능 추가하는 법" /><published>2022-03-14T00:00:00+09:00</published><updated>2022-03-14T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/14/add_comment_func</id><content type="html" xml:base="http://localhost:4000/2022/03/14/add_comment_func.html"><![CDATA[<h1 id="서론">서론</h1>
<p><img src="/assets/../../assets/images/posts/blog/03_14/1.png" alt="" class="align-center" /></p>

<p>깃허브 페이지에 댓글 기능을 추가하는 방법 중에 가장 대중화된(?) 방법은 <a href="https://disqus.com/">Disqus</a>를 사용하는 것 입니다. Disqus도 무료로 사용할 수 있지만… 광고가 붙게되고 <del>못생겨서</del>
대안을 찾게 됐습니다. 대안을 찾을 때 고려했던 사항은</p>

<ol>
  <li>광고가 없어야 한다. 🚫</li>
  <li>가볍고 예뻐야 한다. 💅</li>
</ol>

<p>입니다. 그 결과 발견💡한 것이 <a href="https://utteranc.es/">Utterances</a> 입니다.<br />
<!--more--></p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/2.png" alt="" class="align-center" /></p>

<p><code class="language-plaintext highlighter-rouge">Utterances</code>를 사용하게 되면 위의 사진처럼 댓글을 Github의 issue로 관리할 수 있습니다. 댓글을 달기 위해서는 Github의 계정이 필요한 것이 단점이지만, 제 블로그에 들어오셔서 댓글을 남기실 분들은 Github 계정이
있을테니 괜찮겠죠??</p>

<p>지금부터는 차례차례 <code class="language-plaintext highlighter-rouge">Utterances</code>를 제 블로그에 적용해보겠습니다.</p>

<h1 id="1-레파지토리-생성">1. 레파지토리 생성</h1>
<p><img src="/assets/../../assets/images/posts/blog/03_14/4.png" alt="" class="align-center" /></p>

<p>Utterance를 적용하기에 앞서 댓글(깃허브 이슈)를 관리할 public repository가 필요합니다. 이름은 정해져있는게 아니고 임의로 지정하셔도 무관합니다. 다만, 꼭 <code class="language-plaintext highlighter-rouge">public</code>으로 생성하셔야 합니다.</p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/5.png" alt="" class="align-center" /></p>

<p>그 다음 생성한 레파지토리 안에 <code class="language-plaintext highlighter-rouge">utterances.json</code> 파일을 생성하셔서 아래의 코드를 작성하시면 사전 작업 완료입니다.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"origins"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"https://lee-jaewook.github.io"</span><span class="p">]</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="p">[</span><span class="err">*</span><span class="p">]</span><span class="w"> </span><span class="err">안에는</span><span class="w"> </span><span class="err">댓글</span><span class="w"> </span><span class="err">기능을</span><span class="w"> </span><span class="err">추가할</span><span class="w"> </span><span class="err">사이트를</span><span class="w"> </span><span class="err">입력</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h1 id="2-설치">2. 설치</h1>
<p><img src="/assets/../../assets/images/posts/blog/03_14/3.png" alt="" class="align-center" /></p>

<p>먼저 깃허브 앱의 <a href="https://github.com/apps/utterances">Utterances 설치 페이지</a>에서 <code class="language-plaintext highlighter-rouge">install</code> 버튼을 눌러줍니다.</p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/6.png" alt="" class="align-center" /></p>

<p>그 다음 <code class="language-plaintext highlighter-rouge">Only select repositories</code>를 선택, <code class="language-plaintext highlighter-rouge">select repositoris</code>를 클릭하셔서 <a href="#1-댓글을-관리할-레파지토리-생성">챕터 1</a>에서 만들었던 repository를 선택하시면 됩니다.</p>

<h1 id="3-설정">3. 설정</h1>
<p><img src="/assets/../../assets/images/posts/blog/03_14/7.png" alt="" class="align-center" /></p>

<p>설치를 완료하시면 위에 보이시는 설정 페이지로 자동으로 이동됩니다. 이 페이지에서 <code class="language-plaintext highlighter-rouge">rpositroy 설정</code>, <code class="language-plaintext highlighter-rouge">포스트와 이슈 맵핑</code>, <code class="language-plaintext highlighter-rouge">이슈 라벨</code>, <code class="language-plaintext highlighter-rouge">테마 설정</code>을 하실 수 있습니다.</p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/8.png" alt="" class="align-center" /></p>

<p><code class="language-plaintext highlighter-rouge">rpositroy 설정</code>은 <code class="language-plaintext highlighter-rouge">username/repository_name</code>을 기입하시고 <code class="language-plaintext highlighter-rouge">포스트와 이슈 맵핑</code>은 pathname으로 이슈를 매핑하는게 나중에 블로그 내용이 바뀌어도 이슈가 맵핑될 수 있을 것 같아 선택하였습니다.</p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/9.png" alt="" class="align-center" /></p>

<p>설정을 완료하신 다음 <code class="language-plaintext highlighter-rouge">Enable Utterances</code> 스크립트를 복사합니다.</p>

<h1 id="4-코드-추가">4. 코드 추가</h1>

<p>마지막으로 <code class="language-plaintext highlighter-rouge">Enable Utterances</code> 스크립트를 넣을 파일을 찾아야 합니다. 보통 <code class="language-plaintext highlighter-rouge">_layouts/article.html</code>에 넣으시면 되는데, 제가 사용하고 있는 <a href="https://github.com/kitian616/jekyll-TeXt-theme">TeXt 테마</a>에서는</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## =&gt; Comments</span>
<span class="c1">##############################</span>
<span class="na">comments</span><span class="pi">:</span>
  <span class="na">provider</span><span class="pi">:</span> <span class="s2">"</span><span class="s">custom"</span> <span class="c1"># false (default), "disqus", "gitalk", "valine", "custom"</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">_config.yml</code>의 commets provider를 <code class="language-plaintext highlighter-rouge">custom</code>으로 수정한 뒤 <code class="language-plaintext highlighter-rouge">_inclue/comments-providers/cumtom.html</code>에 아래와 같이 코드를 추가하면 됩니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- start custom comments snippet --&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://utteranc.es/client.js"</span>
        <span class="na">repo=</span><span class="s">"lee-jaewook/blog-comments"</span>
        <span class="na">issue-term=</span><span class="s">"pathname"</span>
        <span class="na">theme=</span><span class="s">"github-light"</span>
        <span class="na">crossorigin=</span><span class="s">"anonymous"</span>
        <span class="na">async</span><span class="nt">&gt;</span>
<span class="nt">&lt;/script&gt;</span>
<span class="c">&lt;!-- end custom comments snippet --&gt;</span>
</code></pre></div></div>

<p>수정된 파일을 모두 깃허브에 push하시면 아래와 같이 댓글 기능이 추가된 것을 확인할 수 있습니다.(로컬로는 안보입니다!)</p>

<p><img src="/assets/../../assets/images/posts/blog/03_14/10.png" alt="" class="align-center" /></p>]]></content><author><name>Jaewook Lee</name></author><category term="Blog" /><summary type="html"><![CDATA[서론 깃허브 페이지에 댓글 기능을 추가하는 방법 중에 가장 대중화된(?) 방법은 Disqus를 사용하는 것 입니다. Disqus도 무료로 사용할 수 있지만… 광고가 붙게되고 못생겨서 대안을 찾게 됐습니다. 대안을 찾을 때 고려했던 사항은 광고가 없어야 한다. 🚫 가볍고 예뻐야 한다. 💅 입니다. 그 결과 발견💡한 것이 Utterances 입니다.]]></summary></entry><entry><title type="html">코딩 테스트, 파이썬 문법 정리</title><link href="http://localhost:4000/2022/03/13/python_coding_test_tip.html" rel="alternate" type="text/html" title="코딩 테스트, 파이썬 문법 정리" /><published>2022-03-13T00:00:00+09:00</published><updated>2022-03-13T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/13/python_coding_test_tip</id><content type="html" xml:base="http://localhost:4000/2022/03/13/python_coding_test_tip.html"><![CDATA[<p>파이썬의 많은 문법 중 코딩 테스트에서 생산성을 높이기 위한 고급(?) 문법을 정리해 보도록 하겠습니다.<br />
(출처 : <a href="https://github.com/onlybooks/algorithm-interview#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9D%B8%ED%84%B0%EB%B7%B0">파이썬 알고리즘 인터뷰</a>)
<!--more--></p>
<h1 id="네이밍-컨벤션">네이밍 컨벤션</h1>
<ul>
  <li>자바와 달리 파이썬에서의 네이밍 컨벤션은 스네이크 케이스를 따릅니다.</li>
  <li>스네이크 케이스란, 각 단어를 밑줄(_)로 구분하여 표기하는 스네이크 케이스(Snake Case)를 따른다.
    <blockquote>
      <p>카멜 케이스, 스네이크 케이스</p>
      <ul>
        <li>카멜 케이스<br />
camelCase: int = 1</li>
        <li>스네이크 케이스<br />
snake_case: int = 1</li>
      </ul>
    </blockquote>
  </li>
</ul>

<h1 id="타입-힌트">타입 힌트</h1>
<ul>
  <li>파이썬은 동적 타이핑 언어임에도, 타입을 지정할 수 있는 타입 힌트가 추가됨</li>
  <li>타입 힌트를 사용하면 가독성이 좋아지며 버그 발생 확률을 줄일 수 있음</li>
  <li>사용 예시
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="p">:</span> <span class="nb">str</span> <span class="o">=</span> <span class="s">"1"</span>
<span class="k">def</span> <span class="nf">fn</span><span class="p">(</span><span class="n">a</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
</code></pre></div>    </div>
  </li>
  <li>강제 규약이 아니기 때문에, 여전히 동적으로 할당될 수 있음
    <blockquote>
      <p><code class="language-plaintext highlighter-rouge">mypy</code> 타입 힌트에 오류를 확일할 수 있는 라이브러리<br />
<code class="language-plaintext highlighter-rouge">$ pip install mypy</code></p>
    </blockquote>
  </li>
</ul>

<h1 id="리스트-컴프리헨션">리스트 컴프리헨션</h1>
<ul>
  <li>리스트 컴프리헨션 : 기존 리스트를 기반으로 새로운 리스트를 만들어내는 구문</li>
  <li>예시
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="n">n</span> <span class="o">*</span> <span class="mi">2</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">18</span><span class="p">]</span>
</code></pre></div>    </div>
  </li>
  <li>리스트 컴프리헨션을 사용하지 않는 경우
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
<span class="k">if</span> <span class="n">n</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
  <span class="n">a</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">18</span><span class="p">]</span>
</code></pre></div>    </div>
  </li>
  <li>번외로 딕셔너리도 가능하다.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="n">key</span><span class="p">:</span> <span class="n">value</span> <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">original</span><span class="p">.</span><span class="n">items</span><span class="p">()}</span>
</code></pre></div>    </div>
  </li>
  <li>딕셔너리 컴프리헨션을 사용하지 않는 경우
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">{}</span>
<span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">original</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
<span class="n">a</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="제너레이터">제너레이터</h1>
<ul>
  <li>제너레이터 : 루프의 반복 동작을 제어할 수 있는 루틴 형태</li>
  <li><code class="language-plaintext highlighter-rouge">yield</code> 구문을 사용해 제너레이터를 리턴할 수 있다.</li>
  <li>예시
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_natural_number</span><span class="p">():</span>
<span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
  <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
  <span class="k">yield</span> <span class="n">n</span>
</code></pre></div>    </div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get_natural_number</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;&lt;</span><span class="n">generator</span> <span class="nb">object</span> <span class="n">get_natural_number</span> <span class="n">at</span> <span class="p">...</span><span class="o">&gt;</span>
</code></pre></div>    </div>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">g</span><span class="o">=</span><span class="n">get_natural_number</span><span class="p">()</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">):</span>
<span class="k">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">g</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span><span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span><span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span><span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span><span class="mi">4</span>
<span class="p">...</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="range">range()</h1>
<ul>
  <li>제너레이터의 방식을 활용하는 대표적인 함수가 range이다.</li>
  <li>예시
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
</code></pre></div>    </div>
  </li>
  <li>for 문에서 사용할 경우 내부적으로 제너레이터의 next()를 호출하듯 매번 다음 숫자를 생성
    <ul>
      <li>예시
        <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
<span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span><span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span>
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>값을 생성하는 것이 아리나, 생성해야 한다는 조건만 존재</li>
  <li><mark>range가 실제 선언보다 메모리 점유율이 낮음</mark>
    <ul>
      <li>예시
        <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="n">n</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000000</span><span class="p">)]</span> <span class="c1"># 메모리 8697464
</span><span class="n">b</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000000</span><span class="p">)</span> <span class="c1"># 메모리 48
</span></code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ul>

<h1 id="enumerate">enumerate</h1>]]></content><author><name>Jaewook Lee</name></author><category term="coding-test" /><summary type="html"><![CDATA[파이썬의 많은 문법 중 코딩 테스트에서 생산성을 높이기 위한 고급(?) 문법을 정리해 보도록 하겠습니다. (출처 : 파이썬 알고리즘 인터뷰)]]></summary></entry><entry><title type="html">Github(깃허브) 프로필 꾸미기(4) - Contribution Chart</title><link href="http://localhost:4000/2022/03/12/git_profile_4.html" rel="alternate" type="text/html" title="Github(깃허브) 프로필 꾸미기(4) - Contribution Chart" /><published>2022-03-12T00:00:00+09:00</published><updated>2022-03-12T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/12/git_profile_4</id><content type="html" xml:base="http://localhost:4000/2022/03/12/git_profile_4.html"><![CDATA[<p>깃허브 프로필에 컨트리뷰션 차트 추가하는 법</p>

<!--more-->
<h1 id="컨트리뷰션-차트contribution-chart-추가">컨트리뷰션 차트(Contribution chart) 추가</h1>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># &lt;github user name&gt;/.github/workflows/cobrinha.yml</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Generate Datas</span>

<span class="na">on</span><span class="pi">:</span>
  <span class="na">schedule</span><span class="pi">:</span> <span class="c1"># execute every 12 hours</span>
    <span class="pi">-</span> <span class="na">cron</span><span class="pi">:</span> <span class="s2">"</span><span class="s">*</span><span class="nv"> </span><span class="s">*/12</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*"</span>
  <span class="na">workflow_dispatch</span><span class="pi">:</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Jobs to update datas</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="c1"># Snake Animation</span>
      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">Platane/snk@master</span>
        <span class="na">id</span><span class="pi">:</span> <span class="s">snake-gif</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">github_user_name</span><span class="pi">:</span> <span class="s">your_git_username</span>
          <span class="na">svg_out_path</span><span class="pi">:</span> <span class="s">dist/github-contribution-grid-snake.svg</span>

      <span class="pi">-</span> <span class="na">uses</span><span class="pi">:</span> <span class="s">crazy-max/ghaction-github-pages@v2.1.3</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">target_branch</span><span class="pi">:</span> <span class="s">output</span>
          <span class="na">build_dir</span><span class="pi">:</span> <span class="s">dist</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">GITHUB_TOKEN</span><span class="pi">:</span> <span class="s">$</span>
</code></pre></div></div>

<p>우선 <code class="language-plaintext highlighter-rouge">/.github/workflows</code> 폴더를 생성하시고, 폴더 안에 <code class="language-plaintext highlighter-rouge">cobrinha.yml</code>파일을 생성하셔서 위와 같이 코드를 작성해주시면 됩니다. 다른건 수정할게 없고, <code class="language-plaintext highlighter-rouge">github_user_name</code>에 자신의 사용자명을 기입하시면 됩니다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="gu">## 🌱 Git Contribution Chart</span>
 !<span class="p">[</span><span class="nv">Snake animation</span><span class="p">](</span><span class="sx">https://github.com/github_user_name/github_user_name/blob/output/github-contribution-grid-snake.svg</span><span class="p">)</span><span class="nt">&lt;br&gt;</span>
</code></pre></div></div>

<p>위의 코드에서 <code class="language-plaintext highlighter-rouge">github_user_name</code>을 자신의 깃허브 사용자명으로 바꾸시고 <code class="language-plaintext highlighter-rouge">README.md</code>파일에 추가해주시면 됩니다.</p>

<p>그 다음은 <a href="https://lee-jaewook.github.io/2022/03/09/git_profile_1.html">Github(깃허브) 프로필 꾸미기(1)</a>에서 설명드렸던 것처럼 깃허브 레파지토리에서 <code class="language-plaintext highlighter-rouge">Action</code>을 실행해 주시면 됩니다.</p>

<p><img src="/assets/images/posts/github/4/2.png" alt="" /></p>

<p><img src="/assets/images/posts/github/4/3.png" alt="" /></p>]]></content><author><name>Jaewook Lee</name></author><category term="github" /><summary type="html"><![CDATA[깃허브 프로필에 컨트리뷰션 차트 추가하는 법]]></summary></entry><entry><title type="html">Github(깃허브) 프로필 꾸미기(3) - Technique Icons &amp;amp; Badge</title><link href="http://localhost:4000/2022/03/11/git_profile_3.html" rel="alternate" type="text/html" title="Github(깃허브) 프로필 꾸미기(3) - Technique Icons &amp;amp; Badge" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/11/git_profile_3</id><content type="html" xml:base="http://localhost:4000/2022/03/11/git_profile_3.html"><![CDATA[<p>깃허브 프로필에 기술 아이콘 및 소셜 뱃지 생성하는 법</p>

<!--more-->
<h1 id="1-기술-아이콘technique-icons-생성">1. 기술 아이콘(Technique Icons) 생성</h1>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"display: inline_block"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">align=</span><span class="s">"center"</span> <span class="na">alt=</span><span class="s">"Python"</span> <span class="na">height=</span><span class="s">"40"</span> <span class="na">width=</span><span class="s">"50"</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg"</span><span class="nt">&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>기술 아이콘을 추가하는 방법은 README.md 파일에 위의 코드를 추가하시면 됩니다. 예시 코드에는 파이썬만 추가하였지만 <a href="https://devicon.dev/">devicon.dev</a>에 접속하셔서 원하는 기술 아이콘의 <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> 요소를 얻을 수 있습니다.</p>

<p><img src="/assets/images/posts/github/3/2.png" alt="" /></p>

<p><img src="/assets/images/posts/github/3/1.png" alt="" /></p>

<h1 id="2-소셜-뱃지social-badge-생성">2. 소셜 뱃지(Social Badge) 생성</h1>
<p><a href="https://devicon.dev/">150-badges-for-github</a>에 들어가셔서 원하는 뱃지의 url을 복사해 <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code>태그로 추가하시면 됩니다. 예시 코드는 아래와 같습니다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"display: inline_block"</span><span class="nt">&gt;&lt;br&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://github.com/lee-jaewook"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"https://img.shields.io/badge/GitHub-100000?style=for-the-badge&amp;logo=github&amp;logoColor=white"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://www.linkedin.com/in/lee-jaewook/"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white"</span> <span class="na">target=</span><span class="s">"_blank"</span><span class="nt">&gt;&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>
<p><img src="/assets/images/posts/github/3/3.png" alt="" /></p>]]></content><author><name>Jaewook Lee</name></author><category term="github" /><summary type="html"><![CDATA[깃허브 프로필에 기술 아이콘 및 소셜 뱃지 생성하는 법]]></summary></entry><entry><title type="html">Github(깃허브) 프로필 꾸미기(2) - Stats</title><link href="http://localhost:4000/2022/03/10/git_profile_2.html" rel="alternate" type="text/html" title="Github(깃허브) 프로필 꾸미기(2) - Stats" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-10T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/10/git_profile_2</id><content type="html" xml:base="http://localhost:4000/2022/03/10/git_profile_2.html"><![CDATA[<p>깃허브 프로필에 Github Stats 생성하는 법</p>

<!--more-->
<h1 id="github-stats-생성">Github Stats 생성</h1>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"https://github.com/your_git_username"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">height=</span><span class="s">"180em"</span> <span class="na">src=</span><span class="s">"https://github-readme-stats.vercel.app/api?username=your_git_username&amp;show_icons=true&amp;theme=dracula&amp;include_all_commits=true&amp;count_private=true"</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;img</span> <span class="na">height=</span><span class="s">"180em"</span> <span class="na">src=</span><span class="s">"https://github-readme-stats.vercel.app/api/top-langs/?username=your_git_username&amp;layout=compact&amp;langs_count=7&amp;theme=dracula"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>Github Stats을 추가하는 방법은 간단합니다. README.md 파일에 위의 코드를 추가하고, <code class="language-plaintext highlighter-rouge">your_git_username</code>을 자신의 깃허브 사용자명으로 수정해주시면 됩니다.</p>

<p><img src="/assets/images/posts/github/2/1.png" alt="" /></p>

<p>(번외로 스타일을 바꾸고 싶으신 분은 <a href="https://github.com/anuraghazra/github-readme-stats">github-readme-stats</a>를 참고하시면 됩니다.)</p>]]></content><author><name>Jaewook Lee</name></author><category term="github" /><summary type="html"><![CDATA[깃허브 프로필에 Github Stats 생성하는 법]]></summary></entry><entry><title type="html">Github(깃허브) 프로필 꾸미기(1) - Init &amp;amp; Posts list</title><link href="http://localhost:4000/2022/03/09/git_profile_1.html" rel="alternate" type="text/html" title="Github(깃허브) 프로필 꾸미기(1) - Init &amp;amp; Posts list" /><published>2022-03-09T00:00:00+09:00</published><updated>2022-03-09T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/09/git_profile_1</id><content type="html" xml:base="http://localhost:4000/2022/03/09/git_profile_1.html"><![CDATA[<p>README.md 생성과 블로그 포스트 리스트(blog post list) 생성</p>

<p><img src="/assets/images/posts/github/1/11.png" alt="" /></p>

<!--more-->
<h1 id="1-readmemd-파일-생성">1. README.md 파일 생성</h1>
<p>블로그 리스트와 Stats를 추가하기에 앞서 각자의 깃허브 사용자명으로 폴더를 생성한 뒤 , 해당 폴더 안에 README.md 파일을 추가해 아래와 같이 간단한 내용을 적어줍니다.</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="gh"># Hi there, I'm `your name`  👋 </span>
</code></pre></div></div>

<p>이 파일을 깃허브 사용자명과 동일한 repository에 push해 주게되면 profile 상단에 표시되게 됩니다.</p>

<p><img src="/assets/images/posts/github/1/4.png" alt="" /></p>

<h1 id="2-블로그-포스트-리스트-생성">2. 블로그 포스트 리스트 생성</h1>
<h2 id="21-readmemd-파일-수정">2.1 README.md 파일 수정</h2>
<p><a href="https://github.com/gautamkrishnar/blog-post-workflow">blog-post-workflow</a>를 사용해 깃허브 프로필에 블로그 리스트를 생성하기 위해서 <code class="language-plaintext highlighter-rouge">README.md</code> 파일에 아래와 같이 내용을 추가해줍니다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- github_user_name/README.md --&gt;</span>
<span class="gu">### 📕 Latest Blog Posts</span>
<span class="c">&lt;!-- BLOG-POST-LIST:START --&gt;</span>
<span class="c">&lt;!-- BLOG-POST-LIST:END --&gt;</span>
</code></pre></div></div>

<h2 id="22-폴더-생성-및-파일-생성">2.2 폴더 생성 및 파일 생성</h2>
<p><code class="language-plaintext highlighter-rouge">/.github/workflows</code>폴더를 생성한 뒤 해당 폴더 안에 <code class="language-plaintext highlighter-rouge">blog-post-workflow.yml</code> 파일을 생성해, <code class="language-plaintext highlighter-rouge">blog-post-workflow.yml</code> 파일에 아래와 같이 입력합니다.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># &lt;github user name&gt;/.github/workflows/blog-post-workflow.yml</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Latest blog post workflow</span>
<span class="na">on</span><span class="pi">:</span>
  <span class="na">schedule</span><span class="pi">:</span> <span class="c1"># Run workflow automatically</span>
    <span class="pi">-</span> <span class="na">cron</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*'</span> <span class="c1"># Runs every hour, on the hour</span>
  <span class="na">workflow_dispatch</span><span class="pi">:</span> <span class="c1"># Run workflow manually (without waiting for the cron to be called), through the Github Actions Workflow page directly</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">update-readme-with-blog</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Update this repo's README with latest blog posts</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v2</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Pull in dev.to posts</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">gautamkrishnar/blog-post-workflow@master</span>
        <span class="na">with</span><span class="pi">:</span> 
          <span class="na">feed_list</span><span class="pi">:</span> <span class="c1"># "your blog feed url"</span>
</code></pre></div></div>

<p>여기서 <code class="language-plaintext highlighter-rouge">feed_list</code>에 여러분 블로그의 RSS feed URL을 적어주시면 됩니다. 저처럼 jekyll로 만든 github page를 사용하고 계신 분은 <code class="language-plaintext highlighter-rouge">_cofig.yml</code>파일에</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-feed</span>
</code></pre></div></div>

<p>이렇게 <code class="language-plaintext highlighter-rouge">jekyll-feed</code>를 추가하신 뒤, <code class="language-plaintext highlighter-rouge">feed_list</code>에 <code class="language-plaintext highlighter-rouge">"&lt;github page url&gt;/feed"</code>를 기입하시면 됩니다.<br />
이제 수정된 모든 파일을 깃허브에 업로드합니다.</p>

<h3 id="23-깃허브-workflows-설정">2.3 깃허브 workflows 설정</h3>

<p><img src="/assets/images/posts/github/1/5.png" alt="" /></p>

<p>업로드를 했지만 위의 그림처럼 포스트의 리스트가 표시되지 않습니다🤦‍♂️. <br />
마지막으로 한가지 작업이 더 남아있습니다.</p>

<p><img src="/assets/images/posts/github/1/6.png" alt="" /></p>

<p><img src="/assets/images/posts/github/1/7.png" alt="" /></p>

<p>프로필을 작성중인 <code class="language-plaintext highlighter-rouge">깃허브 사용자명</code>프로젝트에 들어가셔서 <code class="language-plaintext highlighter-rouge">Actions</code>을 누르시고 좌측의 <code class="language-plaintext highlighter-rouge">Workflows</code> 밑에 <code class="language-plaintext highlighter-rouge">Latest blog post workflow</code>를 클릭, <code class="language-plaintext highlighter-rouge">Run workflow</code>를 클릭하시면 됩니다.</p>

<p><img src="/assets/images/posts/github/1/8.png" alt="" /></p>

<p>잠시 기다린 뒤, 새로고침을 하면 아래와 같이 <code class="language-plaintext highlighter-rouge">workflow</code>가 실행되고 다시 프로필에 가보시면 리스트가 이제 보이게 됩니다<br />
👍👍👍</p>

<p><img src="/assets/images/posts/github/1/9.png" alt="" /></p>

<p><img src="/assets/images/posts/github/1/10.png" alt="" /></p>]]></content><author><name>Jaewook Lee</name></author><category term="github" /><summary type="html"><![CDATA[README.md 생성과 블로그 포스트 리스트(blog post list) 생성]]></summary></entry><entry><title type="html">벡준 | 1157번 | 단어 공부</title><link href="http://localhost:4000/2022/03/08/bjoon_1157.html" rel="alternate" type="text/html" title="벡준 | 1157번 | 단어 공부" /><published>2022-03-08T00:00:00+09:00</published><updated>2022-03-08T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/08/bjoon_1157</id><content type="html" xml:base="http://localhost:4000/2022/03/08/bjoon_1157.html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1157">벡준 1157번</a>
<!--more--></p>

<h1 id="1-문제">1. 문제</h1>
<p><img src="/assets/../../assets/images/posts/Algorithm/bjoon_1157/1.png" alt="" /></p>

<h1 id="2-문제-요약">2. 문제 요약</h1>
<p>대소문자 구분 없이 가장 많이 사용된 알파벳을 알아내자.</p>

<h1 id="3-입출력">3. 입출력</h1>
<ul>
  <li>입력 : 대소문자로 이루어진 단어</li>
  <li>출력
    <ul>
      <li>가장 많이 사용된 알파벳이 여러 개 존재하는 경우
        <ul>
          <li>첫 줄 : <code class="language-plaintext highlighter-rouge">?</code> 출력</li>
        </ul>
      </li>
      <li>가장 많이 사용된 알파벳이 하나만 존재하는 경우
        <ul>
          <li>첫 줄 : <code class="language-plaintext highlighter-rouge">대문자로 알파벳</code> 출력</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="4-전체-파이썬-코드">4. 전체 파이썬 코드</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">upper</span><span class="p">()</span>
<span class="n">unique_words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>

<span class="n">words_cnt</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">unique_words</span> <span class="p">:</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="n">words</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">words_cnt</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>  

<span class="k">if</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">:</span> 
    <span class="k">print</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">max_index</span> <span class="o">=</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> 
    <span class="k">print</span><span class="p">(</span><span class="n">unique_words</span><span class="p">[</span><span class="n">max_index</span><span class="p">])</span>
</code></pre></div></div>

<h1 id="5-코드-풀이">5. 코드 풀이</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">upper</span><span class="p">()</span>
<span class="n">unique_words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>

<span class="n">words_cnt</span> <span class="o">=</span> <span class="p">[]</span>
</code></pre></div></div>

<p>문자열을 입력받아 집합 <code class="language-plaintext highlighter-rouge">words</code>를 통해 중복되는 값을 제거한 리스트 <code class="language-plaintext highlighter-rouge">unique_words</code>를 생성한 뒤, 각 알파벳의 사용 횟수를 저장하기 위한 <code class="language-plaintext highlighter-rouge">words_cnt</code> 리스트를 선언한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">unique_words</span> <span class="p">:</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="n">words</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">words_cnt</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span> 
</code></pre></div></div>

<p>반복문을 통해 물자열에 포함된 알파벳의 갯수를 <code class="language-plaintext highlighter-rouge">words_cnt</code>에 추가한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">:</span> 
    <span class="k">print</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">max_index</span> <span class="o">=</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> 
    <span class="k">print</span><span class="p">(</span><span class="n">unique_words</span><span class="p">[</span><span class="n">max_index</span><span class="p">])</span>
</code></pre></div></div>

<p>사용 횟수가 저장된 <code class="language-plaintext highlighter-rouge">words_cnt</code>에서 가장 큰 수의 개수를 탐색하고, 가장 큰 수가 2개 이상이라면 ?를 출력하고 하나만 존재하는 경우에는 해당 알파벳의 인덱스(<code class="language-plaintext highlighter-rouge">words_cnt</code>의 인덱스와 <code class="language-plaintext highlighter-rouge">unique_words</code>의 인덱스가 동일함을 이용)를 통해 출력한다.</p>]]></content><author><name>Jaewook Lee</name></author><category term="algorithm" /><category term="baekjoon" /><category term="coding-test" /><summary type="html"><![CDATA[벡준 1157번]]></summary></entry></feed>