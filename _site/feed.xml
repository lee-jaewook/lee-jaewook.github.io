<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-03-12T21:24:19+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jaewook Log 🧑🏻‍💻</title><subtitle>Hi my name is jaewook lee.
</subtitle><author><name>Jaewook Lee</name></author><entry><title type="html">Github(깃허브) 프로필 꾸미기(1)</title><link href="http://localhost:4000/2022/03/11/git_profile_1.html" rel="alternate" type="text/html" title="Github(깃허브) 프로필 꾸미기(1)" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/11/git_profile_1</id><content type="html" xml:base="http://localhost:4000/2022/03/11/git_profile_1.html"><![CDATA[<p>README.md 생성과 블로그 포스트 리스트(blog post list) 생성
<!--more--></p>
<h1 id="1-readmemd-파일-생성">1. README.md 파일 생성</h1>
<p>블로그 리스트와 Stats를 추가하기에 앞서 각자의 깃허브 사용자명으로 폴더를 생성한 뒤 , 해당 폴더 안에 README.md 파일을 추가해 아래와 같이 간단한 내용을 적어줍니다.</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;github user name&gt;</span>/README.md --&gt;
<span class="gh"># Hi there, I'm `your name`  👋 </span>
</code></pre></div></div>

<p>이 파일을 깃허브 사용자명과 동일한 repository에 push해 주게되면 profile 상단에 표시되게 됩니다.</p>

<p><img src="/assets/images/posts/github/1/4.png" alt="" /></p>

<h1 id="2-블로그-포스트-리스트-생성">2. 블로그 포스트 리스트 생성</h1>
<h2 id="21-readmemd-파일-수정">2.1 README.md 파일 수정</h2>
<p><a href="https://github.com/gautamkrishnar/blog-post-workflow">blog-post-workflow</a>를 사용해 깃허브 프로필에 블로그 리스트를 생성하기 위해서 <code class="language-plaintext highlighter-rouge">README.md</code> 파일에 아래와 같이 내용을 추가해줍니다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- &lt;github user name&gt;</span>/README.md --&gt;
<span class="gu">### 📕 Latest Blog Posts</span>
<span class="c">&lt;!-- BLOG-POST-LIST:START --&gt;</span>
<span class="c">&lt;!-- BLOG-POST-LIST:END --&gt;</span>
</code></pre></div></div>

<h2 id="22-폴더-생성-및-파일-생성">2.2 폴더 생성 및 파일 생성</h2>
<p><code class="language-plaintext highlighter-rouge">/.github/workflows</code>폴더를 생성한 뒤 해당 폴더 안에 <code class="language-plaintext highlighter-rouge">blog-post-workflow.yml</code> 파일을 생성해, <code class="language-plaintext highlighter-rouge">blog-post-workflow.yml</code> 파일에 아래와 같이 입력합니다.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># &lt;github user name&gt;/.github/workflows/blog-post-workflow.yml</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Latest blog post workflow</span>
<span class="na">on</span><span class="pi">:</span>
  <span class="na">schedule</span><span class="pi">:</span> <span class="c1"># Run workflow automatically</span>
    <span class="pi">-</span> <span class="na">cron</span><span class="pi">:</span> <span class="s1">'</span><span class="s">0</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*</span><span class="nv"> </span><span class="s">*'</span> <span class="c1"># Runs every hour, on the hour</span>
  <span class="na">workflow_dispatch</span><span class="pi">:</span> <span class="c1"># Run workflow manually (without waiting for the cron to be called), through the Github Actions Workflow page directly</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">update-readme-with-blog</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Update this repo's README with latest blog posts</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@v2</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Pull in dev.to posts</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">gautamkrishnar/blog-post-workflow@master</span>
        <span class="na">with</span><span class="pi">:</span> 
          <span class="na">feed_list</span><span class="pi">:</span> <span class="c1"># "your blog feed url"</span>
</code></pre></div></div>

<p>여기서 <code class="language-plaintext highlighter-rouge">feed_list</code>에 여러분 블로그의 RSS feed URL을 적어주시면 됩니다. 저처럼 jekyll로 만든 github page를 사용하고 계신 분은 <code class="language-plaintext highlighter-rouge">_cofig.yml</code>파일에</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-feed</span>
</code></pre></div></div>

<p>이렇게 <code class="language-plaintext highlighter-rouge">jekyll-feed</code>를 추가하신 뒤, <code class="language-plaintext highlighter-rouge">feed_list</code>에 <code class="language-plaintext highlighter-rouge">"&lt;github page url&gt;/feed"</code>를 기입하시면 됩니다.<br />
이제 수정된 모든 파일을 깃허브에 업로드합니다.</p>

<h3 id="23-깃허브-workflows-설정">2.3 깃허브 workflows 설정</h3>

<p><img src="/assets/images/posts/github/1/5.png" alt="" /></p>

<p>업로드를 했지만 위의 그림처럼 포스트의 리스트가 표시되지 않습니다🤦‍♂️. <br />
마지막으로 한가지 작업이 더 남아있습니다.</p>

<p><img src="/assets/images/posts/github/1/6.png" alt="" /></p>

<p><img src="/assets/images/posts/github/1/7.png" alt="" /></p>

<p>프로필을 작성중인 <code class="language-plaintext highlighter-rouge">깃허브 사용자명</code>프로젝트에 들어가셔서 <code class="language-plaintext highlighter-rouge">Actions</code>을 누르시고 좌측의 <code class="language-plaintext highlighter-rouge">Workflows</code> 밑에 <code class="language-plaintext highlighter-rouge">Latest blog post workflow</code>를 클릭, <code class="language-plaintext highlighter-rouge">Run workflow</code>를 클릭하시면 됩니다.</p>

<p><img src="/assets/images/posts/github/1/8.png" alt="" /></p>

<p>잠시 기다린 뒤, 새로고침을 하면 아래와 같이 <code class="language-plaintext highlighter-rouge">workflow</code>가 실행되고 다시 프로필에 가보시면 리스트가 이제 보이게 됩니다<br />
👍👍👍</p>

<p><img src="/assets/images/posts/github/1/9.png" alt="" /></p>

<p><img src="/assets/images/posts/github/1/10.png" alt="" /></p>]]></content><author><name>Jaewook Lee</name></author><category term="github" /><summary type="html"><![CDATA[README.md 생성과 블로그 포스트 리스트(blog post list) 생성]]></summary></entry><entry><title type="html">벡준 | 1157번 | 단어 공부</title><link href="http://localhost:4000/2022/03/10/bjoon_1157.html" rel="alternate" type="text/html" title="벡준 | 1157번 | 단어 공부" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-10T00:00:00+09:00</updated><id>http://localhost:4000/2022/03/10/bjoon_1157</id><content type="html" xml:base="http://localhost:4000/2022/03/10/bjoon_1157.html"><![CDATA[<p><a href="https://www.acmicpc.net/problem/1157">벡준 1157번</a>
<!--more--></p>

<h1 id="1-문제">1. 문제</h1>
<p><img src="/assets/../../assets/images/posts/Algorithm/bjoon_1157/1.png" alt="" /></p>

<h1 id="2-문제-요약">2. 문제 요약</h1>
<p>대소문자 구분 없이 가장 많이 사용된 알파벳을 알아내자.</p>

<h1 id="3-입출력">3. 입출력</h1>
<ul>
  <li>입력 : 대소문자로 이루어진 단어</li>
  <li>출력
    <ul>
      <li>가장 많이 사용된 알파벳이 여러 개 존재하는 경우
        <ul>
          <li>첫 줄 : <code class="language-plaintext highlighter-rouge">?</code> 출력</li>
        </ul>
      </li>
      <li>가장 많이 사용된 알파벳이 하나만 존재하는 경우
        <ul>
          <li>첫 줄 : <code class="language-plaintext highlighter-rouge">대문자로 알파벳</code> 출력</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="4-전체-파이썬-코드">4. 전체 파이썬 코드</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">upper</span><span class="p">()</span>
<span class="n">unique_words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>

<span class="n">words_cnt</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">unique_words</span> <span class="p">:</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="n">words</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">words_cnt</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>  

<span class="k">if</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">:</span> 
    <span class="k">print</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">max_index</span> <span class="o">=</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> 
    <span class="k">print</span><span class="p">(</span><span class="n">unique_words</span><span class="p">[</span><span class="n">max_index</span><span class="p">])</span>
</code></pre></div></div>

<h1 id="5-코드-풀이">5. 코드 풀이</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">words</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">upper</span><span class="p">()</span>
<span class="n">unique_words</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">))</span>

<span class="n">words_cnt</span> <span class="o">=</span> <span class="p">[]</span>
</code></pre></div></div>

<p>문자열을 입력받아 집합 <code class="language-plaintext highlighter-rouge">words</code>를 통해 중복되는 값을 제거한 리스트 <code class="language-plaintext highlighter-rouge">unique_words</code>를 생성한 뒤, 각 알파벳의 사용 횟수를 저장하기 위한 <code class="language-plaintext highlighter-rouge">words_cnt</code> 리스트를 선언한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">unique_words</span> <span class="p">:</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="n">words</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
    <span class="n">words_cnt</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span> 
</code></pre></div></div>

<p>반복문을 통해 물자열에 포함된 알파벳의 갯수를 <code class="language-plaintext highlighter-rouge">words_cnt</code>에 추가한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">:</span> 
    <span class="k">print</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
<span class="k">else</span> <span class="p">:</span>
    <span class="n">max_index</span> <span class="o">=</span> <span class="n">words_cnt</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">words_cnt</span><span class="p">))</span> 
    <span class="k">print</span><span class="p">(</span><span class="n">unique_words</span><span class="p">[</span><span class="n">max_index</span><span class="p">])</span>
</code></pre></div></div>

<p>사용 횟수가 저장된 <code class="language-plaintext highlighter-rouge">words_cnt</code>에서 가장 큰 수의 개수를 탐색하고, 가장 큰 수가 2개 이상이라면 ?를 출력하고 하나만 존재하는 경우에는 해당 알파벳의 인덱스(<code class="language-plaintext highlighter-rouge">words_cnt</code>의 인덱스와 <code class="language-plaintext highlighter-rouge">unique_words</code>의 인덱스가 동일함을 이용)를 통해 출력한다.</p>]]></content><author><name>Jaewook Lee</name></author><category term="Algorithm" /><category term="Baekjoon" /><category term="Coding_Test" /><summary type="html"><![CDATA[벡준 1157번]]></summary></entry></feed>